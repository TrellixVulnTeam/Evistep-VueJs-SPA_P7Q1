{"remainingRequest":"/home/user/Desktop/vue-project/vue-spa-app/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/user/Desktop/vue-project/vue-spa-app/src/components/UserPage/SimpleTodoItem.vue?vue&type=style&index=0&id=6e757020&scoped=true&lang=css&","dependencies":[{"path":"/home/user/Desktop/vue-project/vue-spa-app/src/components/UserPage/SimpleTodoItem.vue","mtime":1612526259607},{"path":"/home/user/Desktop/vue-project/vue-spa-app/node_modules/css-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/user/Desktop/vue-project/vue-spa-app/node_modules/vue-loader/lib/loaders/stylePostLoader.js","mtime":499162500000},{"path":"/home/user/Desktop/vue-project/vue-spa-app/node_modules/postcss-loader/src/index.js","mtime":499162500000},{"path":"/home/user/Desktop/vue-project/vue-spa-app/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/user/Desktop/vue-project/vue-spa-app/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgpsaSB7CiAgYm9yZGVyOiAxcHggc29saWQgI2NjYzsKICBkaXNwbGF5OiBmbGV4OwogIGp1c3RpZnktY29udGVudDogc3BhY2UtYmV0d2VlbjsKICBwYWRkaW5nOiAuNXJlbSAycmVtOwogIG1hcmdpbi1ib3R0b206IDFyZW07Cn0KaW5wdXR7CiAgbWFyZ2luLXJpZ2h0OiAxcmVtOwp9Ci5kb25lewogIHRleHQtZGVjb3JhdGlvbjogbGluZS10aHJvdWdoOwp9Cg=="},{"version":3,"sources":["SimpleTodoItem.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA4CA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"SimpleTodoItem.vue","sourceRoot":"src/components/UserPage","sourcesContent":["<template>\n  <li>\n\t\t<span v-bind:class=\"{done: newBindTasks.completed}\">\n\t\t\t<strong class=\"pr-4\">{{index+1}}</strong>\n\t\t\t<input type=\"checkbox\" v-on:change=\"newBindTasks.completed = !newBindTasks.completed\">\n      {{newBindTasks}}\n\t\t</span>\n  </li>\n</template>\n\n\n\n<script>\nexport default {\n  name: 'SimpleTodoItem',\n\n  data() {\n    return {\n      title: 'title'\n    }\n  },\n\n  props: [\n    \"index\",\n    \"newBindTasks\",\n  ],\n\n/*mounted() {\n    if (this.title.trim()){\n      const newBindTasks = {\n        id: Date.now(),\n        title: this.title,\n        completed: false\n      }\n      this.$emit('add-todo', newBindTasks)\n      this.title=\"\"\n    }\n}*/\n\n}\n</script>\n\n\n<style scoped>\nli {\n  border: 1px solid #ccc;\n  display: flex;\n  justify-content: space-between;\n  padding: .5rem 2rem;\n  margin-bottom: 1rem;\n}\ninput{\n  margin-right: 1rem;\n}\n.done{\n  text-decoration: line-through;\n}\n</style>"]}]}